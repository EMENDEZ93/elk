# verificación servicio elasticsearch
    curl -XGET localhost:9200


# verificación de índex	
    curl -XGET http://localhost:9200/classes?pretty


#creación de index 
    curl -XPUT http://localhost:9200/classes?pretty
    # retorna 
	{"acknowledged":true,"shards_acknowledged":true,"index":"classes"}

    # eliminar index 
        curl -XDELETE http://localhost:9200/classes?pretty
    # retorna
	{"acknowledged":true}


#creación de document
    curl -XPOST http://localhost:9200/classes/class/1/ -H 'Content-Type: application/json' -d @arquitectura.json

    # consulta api elasticsearch
    curl -XGET http://localhost:9200/classes/class/1/?pretty

    # update
    curl -XPOST http://localhost:9200/classes/class/1/_update?pretty -H 'Content-Type: application/json' -d '{"doc":{"unit":4}}'

    # delete
    curl -XDELETE http://localhost:9200/classes/class/2/?pretty

    ******* Punto Calificable ********
    # crear un documento
    curl -XPOST http://localhost:9200/classes/class/2/?pretty -H 'Content-Type: application/json' -d '{}'

    #Cambiar valor del campo ING.SIST por ingeniería de sistemas



# kibana classes e.g

    # creación del index
    curl -XPUT http://localhost:9200/classes?pretty

    # verificación del index
    curl -XGET http://localhost:9200/classes?pretty

    # creación del mapping
    curl -XPUT 'http://localhost:9200/classes/class/_mapping?pretty' -H 'Content-Type: application/json' -d @resource/tile_map/classesRating_mapping.json

    # verificación del mapping
    curl -XGET http://localhost:9200/classes/?pretty

    # agregamos docs del classes.json
    curl -XPOST http://localhost:9200/_bulk?pretty --data-binary @resource/tile_map/classes.json -H 'Content-Type: application/json'

    # verificación de registros
    curl -XGET http://localhost:9200/classes/class/1/?pretty

    # ingresamos a kibana
    http://localhost:5601

    visualize
        => create a visualization
            => coordinate map
                => classes
                    => Geo Coordinates
                        => select an aggregation - GeoHash
                            => field - school_location


# kibana basketball

    # creacion de index basketball
    curl -XPUT localhost:9200/basketball?pretty

    # creacion de mapping
    curl -XPUT 'localhost:9200/basketball/record/_mapping?pretty' -H 'Content-Type: application/json' -d @resource/basketball/basketball_mapping.json

    # agregamos docs del bulk_baskerball.json
    curl -XPOST 'localhost:9200/_bulk?pretty' --data-binary @resource/basketball/bulk_basketball.json -H 'Content-Type: application/json'

    # ingresamos a kibana
    http://localhost:5601

    Management
        => Index pattern - basketball > Next step
            => Time Filter field name - submit_date > Create index pattern

    Discover
        => Quick
            => Last 5 years
        => Absolute
            => From - 2016-10-01 00:00:00.000
            => To - 2016-12-17 23:59:59.999

    Visualize
        => Create a visualization
            => Vertical Bar
                => basketball
                    => Add metrics
                        => Y-Axis
                            => Aggregation - Average
                            => Field - Point
                            => Custom Label - Avg

                        => X-Axis
                            => Aggregation - Terms
                            => Field - name
        => Play


# kibana dashboard


